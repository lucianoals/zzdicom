				zzdicom -- quick and dirty DICOM tools
				======================================

The zzdicom package consists of a few fast and lightweight tools for reading, writing, verifying 
and anonymizing DICOM data. They were written for practical use when and where I had need of them,
not for correctness or completeness.

Limitations
-----------
zzdicom currently only works with little-endian DICOM data. I have never encountered big-endian 
DICOM data in the real world (ie hospital settings), so I never saw a need for adding support for 
this. It compiles out of the box on Linux, but it should also work on other POSIX-y architectures.

Features
--------
The software was written with performance as a high priority, and the little it does, it does far
faster than any other DICOM software that I have tested. The core parser does not utilize any
dynamic memory management.

The tools
---------
zzanon - an in-place DICOM anonymizer. It *changes* the files you list, overwriting the tags it
recognizes as containing patient identifying information. It will not change *anything else*, 
including the relative positioning of any tags in the file. This is to retain the file exactly
as it was, including any esoteric errors the file might contain. Too many other anonymizer tools
will parse the file before copying it out again, accidentially fixing several classes of errors
on the way.

zzverify - will run through the files listed to check for various errors. If any are found, they
are listed on standard out.

zzdump - will dump a list of tags for each DICOM file given.

zzgroupfix - will run fix erroneous group size tags, useful as some software relies on these being
correct if they are present.

zzread - will update the local DICOM database with the given files.

zzstudies - pretty prints a list of all studies in the local DICOM database to standard out.

zzprune - checks and updates all entries in the local DICOM database, removing entries that no
longer refer to an existing file.

zzmkrandom - generates a pseudo-random DICOM file for use in manual testing or a unit testing framework
